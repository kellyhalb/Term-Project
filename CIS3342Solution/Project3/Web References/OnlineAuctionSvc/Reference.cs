//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Project3.OnlineAuctionSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OnlineAuctionSoap", Namespace="http://tempuri.org/")]
    public partial class OnlineAuction : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddNewProductDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeInactiveDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeIfSoldDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovetoTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProductDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBidDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductBidsDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewMyAuctionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyProductDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewUserDBOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OnlineAuction() {
            this.Url = global::Project3.Properties.Settings.Default.Project3_OnlineAuctionSvc_OnlineAuction;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddNewProductDBCompletedEventHandler AddNewProductDBCompleted;
        
        /// <remarks/>
        public event UpdateForDateCompletedEventHandler UpdateForDateCompleted;
        
        /// <remarks/>
        public event MakeInactiveDBCompletedEventHandler MakeInactiveDBCompleted;
        
        /// <remarks/>
        public event ChangeIfSoldDBCompletedEventHandler ChangeIfSoldDBCompleted;
        
        /// <remarks/>
        public event MovetoTransactionsCompletedEventHandler MovetoTransactionsCompleted;
        
        /// <remarks/>
        public event RetrieveProductDBCompletedEventHandler RetrieveProductDBCompleted;
        
        /// <remarks/>
        public event AddBidDBCompletedEventHandler AddBidDBCompleted;
        
        /// <remarks/>
        public event UpdateProductBidsDBCompletedEventHandler UpdateProductBidsDBCompleted;
        
        /// <remarks/>
        public event SearchByCategoryCompletedEventHandler SearchByCategoryCompleted;
        
        /// <remarks/>
        public event ViewMyAuctionsCompletedEventHandler ViewMyAuctionsCompleted;
        
        /// <remarks/>
        public event GetProductIDCompletedEventHandler GetProductIDCompleted;
        
        /// <remarks/>
        public event DeleteProductDBCompletedEventHandler DeleteProductDBCompleted;
        
        /// <remarks/>
        public event ModifyProductDBCompletedEventHandler ModifyProductDBCompleted;
        
        /// <remarks/>
        public event GetMyBidsCompletedEventHandler GetMyBidsCompleted;
        
        /// <remarks/>
        public event AddNewUserDBCompletedEventHandler AddNewUserDBCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewProductDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddNewProductDB(string productname, string productdescription, decimal startingprice, decimal reserveprice, string username, string category, string subcategory, System.DateTime date) {
            this.Invoke("AddNewProductDB", new object[] {
                        productname,
                        productdescription,
                        startingprice,
                        reserveprice,
                        username,
                        category,
                        subcategory,
                        date});
        }
        
        /// <remarks/>
        public void AddNewProductDBAsync(string productname, string productdescription, decimal startingprice, decimal reserveprice, string username, string category, string subcategory, System.DateTime date) {
            this.AddNewProductDBAsync(productname, productdescription, startingprice, reserveprice, username, category, subcategory, date, null);
        }
        
        /// <remarks/>
        public void AddNewProductDBAsync(string productname, string productdescription, decimal startingprice, decimal reserveprice, string username, string category, string subcategory, System.DateTime date, object userState) {
            if ((this.AddNewProductDBOperationCompleted == null)) {
                this.AddNewProductDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewProductDBOperationCompleted);
            }
            this.InvokeAsync("AddNewProductDB", new object[] {
                        productname,
                        productdescription,
                        startingprice,
                        reserveprice,
                        username,
                        category,
                        subcategory,
                        date}, this.AddNewProductDBOperationCompleted, userState);
        }
        
        private void OnAddNewProductDBOperationCompleted(object arg) {
            if ((this.AddNewProductDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewProductDBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateForDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateForDate() {
            object[] results = this.Invoke("UpdateForDate", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForDateAsync() {
            this.UpdateForDateAsync(null);
        }
        
        /// <remarks/>
        public void UpdateForDateAsync(object userState) {
            if ((this.UpdateForDateOperationCompleted == null)) {
                this.UpdateForDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForDateOperationCompleted);
            }
            this.InvokeAsync("UpdateForDate", new object[0], this.UpdateForDateOperationCompleted, userState);
        }
        
        private void OnUpdateForDateOperationCompleted(object arg) {
            if ((this.UpdateForDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForDateCompleted(this, new UpdateForDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MakeInactiveDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MakeInactiveDB(int productid) {
            this.Invoke("MakeInactiveDB", new object[] {
                        productid});
        }
        
        /// <remarks/>
        public void MakeInactiveDBAsync(int productid) {
            this.MakeInactiveDBAsync(productid, null);
        }
        
        /// <remarks/>
        public void MakeInactiveDBAsync(int productid, object userState) {
            if ((this.MakeInactiveDBOperationCompleted == null)) {
                this.MakeInactiveDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeInactiveDBOperationCompleted);
            }
            this.InvokeAsync("MakeInactiveDB", new object[] {
                        productid}, this.MakeInactiveDBOperationCompleted, userState);
        }
        
        private void OnMakeInactiveDBOperationCompleted(object arg) {
            if ((this.MakeInactiveDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeInactiveDBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeIfSoldDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeIfSoldDB(int productid, string didsell) {
            this.Invoke("ChangeIfSoldDB", new object[] {
                        productid,
                        didsell});
        }
        
        /// <remarks/>
        public void ChangeIfSoldDBAsync(int productid, string didsell) {
            this.ChangeIfSoldDBAsync(productid, didsell, null);
        }
        
        /// <remarks/>
        public void ChangeIfSoldDBAsync(int productid, string didsell, object userState) {
            if ((this.ChangeIfSoldDBOperationCompleted == null)) {
                this.ChangeIfSoldDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeIfSoldDBOperationCompleted);
            }
            this.InvokeAsync("ChangeIfSoldDB", new object[] {
                        productid,
                        didsell}, this.ChangeIfSoldDBOperationCompleted, userState);
        }
        
        private void OnChangeIfSoldDBOperationCompleted(object arg) {
            if ((this.ChangeIfSoldDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeIfSoldDBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MovetoTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MovetoTransactions(string sellerusername, string productname, int bids, decimal currentbid, string winnerusername) {
            this.Invoke("MovetoTransactions", new object[] {
                        sellerusername,
                        productname,
                        bids,
                        currentbid,
                        winnerusername});
        }
        
        /// <remarks/>
        public void MovetoTransactionsAsync(string sellerusername, string productname, int bids, decimal currentbid, string winnerusername) {
            this.MovetoTransactionsAsync(sellerusername, productname, bids, currentbid, winnerusername, null);
        }
        
        /// <remarks/>
        public void MovetoTransactionsAsync(string sellerusername, string productname, int bids, decimal currentbid, string winnerusername, object userState) {
            if ((this.MovetoTransactionsOperationCompleted == null)) {
                this.MovetoTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovetoTransactionsOperationCompleted);
            }
            this.InvokeAsync("MovetoTransactions", new object[] {
                        sellerusername,
                        productname,
                        bids,
                        currentbid,
                        winnerusername}, this.MovetoTransactionsOperationCompleted, userState);
        }
        
        private void OnMovetoTransactionsOperationCompleted(object arg) {
            if ((this.MovetoTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovetoTransactionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProductDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product RetrieveProductDB(int productID) {
            object[] results = this.Invoke("RetrieveProductDB", new object[] {
                        productID});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProductDBAsync(int productID) {
            this.RetrieveProductDBAsync(productID, null);
        }
        
        /// <remarks/>
        public void RetrieveProductDBAsync(int productID, object userState) {
            if ((this.RetrieveProductDBOperationCompleted == null)) {
                this.RetrieveProductDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProductDBOperationCompleted);
            }
            this.InvokeAsync("RetrieveProductDB", new object[] {
                        productID}, this.RetrieveProductDBOperationCompleted, userState);
        }
        
        private void OnRetrieveProductDBOperationCompleted(object arg) {
            if ((this.RetrieveProductDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProductDBCompleted(this, new RetrieveProductDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddBidDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddBidDB(int productID, decimal bidamount, string currentbidder) {
            this.Invoke("AddBidDB", new object[] {
                        productID,
                        bidamount,
                        currentbidder});
        }
        
        /// <remarks/>
        public void AddBidDBAsync(int productID, decimal bidamount, string currentbidder) {
            this.AddBidDBAsync(productID, bidamount, currentbidder, null);
        }
        
        /// <remarks/>
        public void AddBidDBAsync(int productID, decimal bidamount, string currentbidder, object userState) {
            if ((this.AddBidDBOperationCompleted == null)) {
                this.AddBidDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBidDBOperationCompleted);
            }
            this.InvokeAsync("AddBidDB", new object[] {
                        productID,
                        bidamount,
                        currentbidder}, this.AddBidDBOperationCompleted, userState);
        }
        
        private void OnAddBidDBOperationCompleted(object arg) {
            if ((this.AddBidDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBidDBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProductBidsDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProductBidsDB(int productID, decimal currentbid, string bidderusername) {
            this.Invoke("UpdateProductBidsDB", new object[] {
                        productID,
                        currentbid,
                        bidderusername});
        }
        
        /// <remarks/>
        public void UpdateProductBidsDBAsync(int productID, decimal currentbid, string bidderusername) {
            this.UpdateProductBidsDBAsync(productID, currentbid, bidderusername, null);
        }
        
        /// <remarks/>
        public void UpdateProductBidsDBAsync(int productID, decimal currentbid, string bidderusername, object userState) {
            if ((this.UpdateProductBidsDBOperationCompleted == null)) {
                this.UpdateProductBidsDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductBidsDBOperationCompleted);
            }
            this.InvokeAsync("UpdateProductBidsDB", new object[] {
                        productID,
                        currentbid,
                        bidderusername}, this.UpdateProductBidsDBOperationCompleted, userState);
        }
        
        private void OnUpdateProductBidsDBOperationCompleted(object arg) {
            if ((this.UpdateProductBidsDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductBidsDBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByCategory(string category) {
            object[] results = this.Invoke("SearchByCategory", new object[] {
                        category});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchByCategoryAsync(string category) {
            this.SearchByCategoryAsync(category, null);
        }
        
        /// <remarks/>
        public void SearchByCategoryAsync(string category, object userState) {
            if ((this.SearchByCategoryOperationCompleted == null)) {
                this.SearchByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchByCategoryOperationCompleted);
            }
            this.InvokeAsync("SearchByCategory", new object[] {
                        category}, this.SearchByCategoryOperationCompleted, userState);
        }
        
        private void OnSearchByCategoryOperationCompleted(object arg) {
            if ((this.SearchByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchByCategoryCompleted(this, new SearchByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewMyAuctions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ViewMyAuctions(string username) {
            object[] results = this.Invoke("ViewMyAuctions", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ViewMyAuctionsAsync(string username) {
            this.ViewMyAuctionsAsync(username, null);
        }
        
        /// <remarks/>
        public void ViewMyAuctionsAsync(string username, object userState) {
            if ((this.ViewMyAuctionsOperationCompleted == null)) {
                this.ViewMyAuctionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewMyAuctionsOperationCompleted);
            }
            this.InvokeAsync("ViewMyAuctions", new object[] {
                        username}, this.ViewMyAuctionsOperationCompleted, userState);
        }
        
        private void OnViewMyAuctionsOperationCompleted(object arg) {
            if ((this.ViewMyAuctionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewMyAuctionsCompleted(this, new ViewMyAuctionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetProductID(string productname, string productdescription) {
            object[] results = this.Invoke("GetProductID", new object[] {
                        productname,
                        productdescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductIDAsync(string productname, string productdescription) {
            this.GetProductIDAsync(productname, productdescription, null);
        }
        
        /// <remarks/>
        public void GetProductIDAsync(string productname, string productdescription, object userState) {
            if ((this.GetProductIDOperationCompleted == null)) {
                this.GetProductIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductIDOperationCompleted);
            }
            this.InvokeAsync("GetProductID", new object[] {
                        productname,
                        productdescription}, this.GetProductIDOperationCompleted, userState);
        }
        
        private void OnGetProductIDOperationCompleted(object arg) {
            if ((this.GetProductIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductIDCompleted(this, new GetProductIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProductDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteProductDB(int productID) {
            object[] results = this.Invoke("DeleteProductDB", new object[] {
                        productID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProductDBAsync(int productID) {
            this.DeleteProductDBAsync(productID, null);
        }
        
        /// <remarks/>
        public void DeleteProductDBAsync(int productID, object userState) {
            if ((this.DeleteProductDBOperationCompleted == null)) {
                this.DeleteProductDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductDBOperationCompleted);
            }
            this.InvokeAsync("DeleteProductDB", new object[] {
                        productID}, this.DeleteProductDBOperationCompleted, userState);
        }
        
        private void OnDeleteProductDBOperationCompleted(object arg) {
            if ((this.DeleteProductDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductDBCompleted(this, new DeleteProductDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyProductDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ModifyProductDB(int productID, string productname, string productdescription, decimal reserveprice) {
            object[] results = this.Invoke("ModifyProductDB", new object[] {
                        productID,
                        productname,
                        productdescription,
                        reserveprice});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyProductDBAsync(int productID, string productname, string productdescription, decimal reserveprice) {
            this.ModifyProductDBAsync(productID, productname, productdescription, reserveprice, null);
        }
        
        /// <remarks/>
        public void ModifyProductDBAsync(int productID, string productname, string productdescription, decimal reserveprice, object userState) {
            if ((this.ModifyProductDBOperationCompleted == null)) {
                this.ModifyProductDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyProductDBOperationCompleted);
            }
            this.InvokeAsync("ModifyProductDB", new object[] {
                        productID,
                        productname,
                        productdescription,
                        reserveprice}, this.ModifyProductDBOperationCompleted, userState);
        }
        
        private void OnModifyProductDBOperationCompleted(object arg) {
            if ((this.ModifyProductDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyProductDBCompleted(this, new ModifyProductDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyBids", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyBids(string username) {
            object[] results = this.Invoke("GetMyBids", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBidsAsync(string username) {
            this.GetMyBidsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMyBidsAsync(string username, object userState) {
            if ((this.GetMyBidsOperationCompleted == null)) {
                this.GetMyBidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBidsOperationCompleted);
            }
            this.InvokeAsync("GetMyBids", new object[] {
                        username}, this.GetMyBidsOperationCompleted, userState);
        }
        
        private void OnGetMyBidsOperationCompleted(object arg) {
            if ((this.GetMyBidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBidsCompleted(this, new GetMyBidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewUserDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddNewUserDB(string username, string password, string name, string email, string accounttype) {
            this.Invoke("AddNewUserDB", new object[] {
                        username,
                        password,
                        name,
                        email,
                        accounttype});
        }
        
        /// <remarks/>
        public void AddNewUserDBAsync(string username, string password, string name, string email, string accounttype) {
            this.AddNewUserDBAsync(username, password, name, email, accounttype, null);
        }
        
        /// <remarks/>
        public void AddNewUserDBAsync(string username, string password, string name, string email, string accounttype, object userState) {
            if ((this.AddNewUserDBOperationCompleted == null)) {
                this.AddNewUserDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewUserDBOperationCompleted);
            }
            this.InvokeAsync("AddNewUserDB", new object[] {
                        username,
                        password,
                        name,
                        email,
                        accounttype}, this.AddNewUserDBOperationCompleted, userState);
        }
        
        private void OnAddNewUserDBOperationCompleted(object arg) {
            if ((this.AddNewUserDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewUserDBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Product {
        
        private string productnameField;
        
        private string productdescriptionField;
        
        private string sellerusernameField;
        
        private System.DateTime auctionenddateField;
        
        private decimal currentbidField;
        
        private decimal reservepriceField;
        
        private string productnameField1;
        
        private string productdescriptionField1;
        
        private string sellerusernameField1;
        
        private System.DateTime auctionenddateField1;
        
        private decimal currentbidField1;
        
        private decimal reservepriceField1;
        
        /// <remarks/>
        public string productname {
            get {
                return this.productnameField;
            }
            set {
                this.productnameField = value;
            }
        }
        
        /// <remarks/>
        public string productdescription {
            get {
                return this.productdescriptionField;
            }
            set {
                this.productdescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string sellerusername {
            get {
                return this.sellerusernameField;
            }
            set {
                this.sellerusernameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime auctionenddate {
            get {
                return this.auctionenddateField;
            }
            set {
                this.auctionenddateField = value;
            }
        }
        
        /// <remarks/>
        public decimal currentbid {
            get {
                return this.currentbidField;
            }
            set {
                this.currentbidField = value;
            }
        }
        
        /// <remarks/>
        public decimal reserveprice {
            get {
                return this.reservepriceField;
            }
            set {
                this.reservepriceField = value;
            }
        }
        
        /// <remarks/>
        public string Productname {
            get {
                return this.productnameField1;
            }
            set {
                this.productnameField1 = value;
            }
        }
        
        /// <remarks/>
        public string Productdescription {
            get {
                return this.productdescriptionField1;
            }
            set {
                this.productdescriptionField1 = value;
            }
        }
        
        /// <remarks/>
        public string Sellerusername {
            get {
                return this.sellerusernameField1;
            }
            set {
                this.sellerusernameField1 = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Auctionenddate {
            get {
                return this.auctionenddateField1;
            }
            set {
                this.auctionenddateField1 = value;
            }
        }
        
        /// <remarks/>
        public decimal Currentbid {
            get {
                return this.currentbidField1;
            }
            set {
                this.currentbidField1 = value;
            }
        }
        
        /// <remarks/>
        public decimal Reserveprice {
            get {
                return this.reservepriceField1;
            }
            set {
                this.reservepriceField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddNewProductDBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateForDateCompletedEventHandler(object sender, UpdateForDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MakeInactiveDBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeIfSoldDBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MovetoTransactionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RetrieveProductDBCompletedEventHandler(object sender, RetrieveProductDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProductDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProductDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddBidDBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateProductBidsDBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SearchByCategoryCompletedEventHandler(object sender, SearchByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ViewMyAuctionsCompletedEventHandler(object sender, ViewMyAuctionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewMyAuctionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewMyAuctionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProductIDCompletedEventHandler(object sender, GetProductIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteProductDBCompletedEventHandler(object sender, DeleteProductDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProductDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProductDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ModifyProductDBCompletedEventHandler(object sender, ModifyProductDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyProductDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyProductDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMyBidsCompletedEventHandler(object sender, GetMyBidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddNewUserDBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591